$date
	Mon Apr 29 18:04:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module set_tb $end
$var wire 64 ! o_addr [63:0] $end
$var wire 8 " hit [7:0] $end
$var reg 1 # clk $end
$var reg 64 $ pa [63:0] $end
$var reg 12 % pcid [11:0] $end
$var reg 64 & va [63:0] $end
$scope module TLB $end
$var wire 1 # clk $end
$var wire 12 ' in_pcid [11:0] $end
$var wire 64 ( pa [63:0] $end
$var wire 64 ) va [63:0] $end
$var wire 49 * tag [48:0] $end
$var wire 3 + set [2:0] $end
$var wire 12 , local_addr [11:0] $end
$var wire 52 - insrt_pa [51:0] $end
$var wire 8 . hit [7:0] $end
$var wire 8 / clr_set [7:0] $end
$var reg 8 0 enable [7:0] $end
$var reg 64 1 o_addr [63:0] $end
$var reg 64 2 prev_addr [63:0] $end
$scope module _set_0 $end
$var wire 1 # clk $end
$var wire 1 3 enable $end
$var wire 12 4 pcid [11:0] $end
$var wire 52 5 pull_phys_add [51:0] $end
$var wire 49 6 tag [48:0] $end
$var wire 64 7 comp_addr [63:0] $end
$var reg 1 8 clr $end
$var reg 1 9 hit $end
$var reg 1 : mode $end
$var reg 7 ; plru [6:0] $end
$var reg 52 < push_phys_addr [51:0] $end
$var integer 32 = bit [31:0] $end
$scope begin set_init $end
$var integer 32 > i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_1 $end
$var wire 1 # clk $end
$var wire 1 ? enable $end
$var wire 12 @ pcid [11:0] $end
$var wire 52 A pull_phys_add [51:0] $end
$var wire 49 B tag [48:0] $end
$var wire 64 C comp_addr [63:0] $end
$var reg 1 D clr $end
$var reg 1 E hit $end
$var reg 1 F mode $end
$var reg 7 G plru [6:0] $end
$var reg 52 H push_phys_addr [51:0] $end
$var integer 32 I bit [31:0] $end
$scope begin set_init $end
$var integer 32 J i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_2 $end
$var wire 1 # clk $end
$var wire 1 K enable $end
$var wire 12 L pcid [11:0] $end
$var wire 52 M pull_phys_add [51:0] $end
$var wire 49 N tag [48:0] $end
$var wire 64 O comp_addr [63:0] $end
$var reg 1 P clr $end
$var reg 1 Q hit $end
$var reg 1 R mode $end
$var reg 7 S plru [6:0] $end
$var reg 52 T push_phys_addr [51:0] $end
$var integer 32 U bit [31:0] $end
$scope begin set_init $end
$var integer 32 V i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_3 $end
$var wire 1 # clk $end
$var wire 1 W enable $end
$var wire 12 X pcid [11:0] $end
$var wire 52 Y pull_phys_add [51:0] $end
$var wire 49 Z tag [48:0] $end
$var wire 64 [ comp_addr [63:0] $end
$var reg 1 \ clr $end
$var reg 1 ] hit $end
$var reg 1 ^ mode $end
$var reg 7 _ plru [6:0] $end
$var reg 52 ` push_phys_addr [51:0] $end
$var integer 32 a bit [31:0] $end
$scope begin set_init $end
$var integer 32 b i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_4 $end
$var wire 1 # clk $end
$var wire 1 c enable $end
$var wire 12 d pcid [11:0] $end
$var wire 52 e pull_phys_add [51:0] $end
$var wire 49 f tag [48:0] $end
$var wire 64 g comp_addr [63:0] $end
$var reg 1 h clr $end
$var reg 1 i hit $end
$var reg 1 j mode $end
$var reg 7 k plru [6:0] $end
$var reg 52 l push_phys_addr [51:0] $end
$var integer 32 m bit [31:0] $end
$scope begin set_init $end
$var integer 32 n i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_5 $end
$var wire 1 # clk $end
$var wire 1 o enable $end
$var wire 12 p pcid [11:0] $end
$var wire 52 q pull_phys_add [51:0] $end
$var wire 49 r tag [48:0] $end
$var wire 64 s comp_addr [63:0] $end
$var reg 1 t clr $end
$var reg 1 u hit $end
$var reg 1 v mode $end
$var reg 7 w plru [6:0] $end
$var reg 52 x push_phys_addr [51:0] $end
$var integer 32 y bit [31:0] $end
$scope begin set_init $end
$var integer 32 z i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_6 $end
$var wire 1 # clk $end
$var wire 1 { enable $end
$var wire 12 | pcid [11:0] $end
$var wire 52 } pull_phys_add [51:0] $end
$var wire 49 ~ tag [48:0] $end
$var wire 64 !" comp_addr [63:0] $end
$var reg 1 "" clr $end
$var reg 1 #" hit $end
$var reg 1 $" mode $end
$var reg 7 %" plru [6:0] $end
$var reg 52 &" push_phys_addr [51:0] $end
$var integer 32 '" bit [31:0] $end
$scope begin set_init $end
$var integer 32 (" i [31:0] $end
$upscope $end
$upscope $end
$scope module _set_7 $end
$var wire 1 # clk $end
$var wire 1 )" enable $end
$var wire 12 *" pcid [11:0] $end
$var wire 52 +" pull_phys_add [51:0] $end
$var wire 49 ," tag [48:0] $end
$var wire 64 -" comp_addr [63:0] $end
$var reg 1 ." clr $end
$var reg 1 /" hit $end
$var reg 1 0" mode $end
$var reg 7 1" plru [6:0] $end
$var reg 52 2" push_phys_addr [51:0] $end
$var integer 32 3" bit [31:0] $end
$scope begin set_init $end
$var integer 32 4" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b111 4"
b0 3"
bx 2"
b0 1"
00"
0/"
0."
b1111111111111111111111111111111111111111111111111000000000000 -"
b1111111111111111111111111111111111111111111111111 ,"
b0 +"
b0 *"
0)"
b111 ("
b0 '"
bx &"
b0 %"
0$"
0#"
0""
b1111111111111111111111111111111111111111111111111000000000000 !"
b1111111111111111111111111111111111111111111111111 ~
b0 }
b0 |
0{
b111 z
b0 y
bx x
b0 w
0v
0u
0t
b1111111111111111111111111111111111111111111111111000000000000 s
b1111111111111111111111111111111111111111111111111 r
b0 q
b0 p
0o
b111 n
b0 m
bx l
b0 k
0j
0i
0h
b1111111111111111111111111111111111111111111111111000000000000 g
b1111111111111111111111111111111111111111111111111 f
b0 e
b0 d
0c
b111 b
b0 a
bx `
b0 _
0^
0]
0\
b1111111111111111111111111111111111111111111111111000000000000 [
b1111111111111111111111111111111111111111111111111 Z
b0 Y
b0 X
0W
b111 V
b0 U
bx T
b0 S
0R
0Q
0P
b1111111111111111111111111111111111111111111111111000000000000 O
b1111111111111111111111111111111111111111111111111 N
b0 M
b0 L
0K
b111 J
b0 I
bx H
b0 G
0F
0E
0D
b1111111111111111111111111111111111111111111111111000000000000 C
b1111111111111111111111111111111111111111111111111 B
b0 A
b0 @
0?
b111 >
b0 =
bx <
b0 ;
0:
09
08
b1111111111111111111111111111111111111111111111111000000000000 7
b1111111111111111111111111111111111111111111111111 6
b0 5
b0 4
03
b0 2
bx 1
b0 0
b0 /
b0 .
b0 -
b111111110001 ,
b111 +
b1111111111111111111111111111111111111111111111111 *
b1111111111111111111111111111111111111111111111111111111111110001 )
b0 (
b0 '
b1111111111111111111111111111111111111111111111111111111111110001 &
b0 %
b0 $
0#
b0 "
bx !
$end
#1
b1111111111111111111111111111111111111111111111111111111111110001 2
1)"
b10000000 0
1#
#2
10"
b0 /
0."
b0 "
b0 .
0/"
0#
#3
1#
#4
00"
b10000000 /
1."
b110 3"
b1000101 1"
0#
#5
bx111111110001 !
bx111111110001 1
0)"
b0 0
1#
#6
b0 /
0."
0#
#7
1#
#8
0#
#9
1#
#10
b0 ,
b0 +
b0 7
b0 C
b0 O
b0 [
b0 g
b0 s
b0 !"
b0 -"
b0 *
b0 6
b0 B
b0 N
b0 Z
b0 f
b0 r
b0 ~
b0 ,"
0#
b0 &
b0 )
#11
b0 2
13
b1 0
1#
#12
b1 /
18
b1 "
b1 .
19
0#
#13
bx000000000000 !
bx000000000000 1
03
b0 0
1#
#14
b0 "
b0 .
09
b0 /
08
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
1#
#20
b111111110010 ,
b111 +
b1111111111111111111111111111111111111111111111111000000000000 7
b1111111111111111111111111111111111111111111111111000000000000 C
b1111111111111111111111111111111111111111111111111000000000000 O
b1111111111111111111111111111111111111111111111111000000000000 [
b1111111111111111111111111111111111111111111111111000000000000 g
b1111111111111111111111111111111111111111111111111000000000000 s
b1111111111111111111111111111111111111111111111111000000000000 !"
b1111111111111111111111111111111111111111111111111000000000000 -"
b1111111111111111111111111111111111111111111111111 *
b1111111111111111111111111111111111111111111111111 6
b1111111111111111111111111111111111111111111111111 B
b1111111111111111111111111111111111111111111111111 N
b1111111111111111111111111111111111111111111111111 Z
b1111111111111111111111111111111111111111111111111 f
b1111111111111111111111111111111111111111111111111 r
b1111111111111111111111111111111111111111111111111 ~
b1111111111111111111111111111111111111111111111111 ,"
0#
b1111111111111111111111111111111111111111111111111111111111110010 &
b1111111111111111111111111111111111111111111111111111111111110010 )
#21
b1111111111111111111111111111111111111111111111111111111111110010 2
1)"
b10000000 0
1#
#22
b0 2"
b10000000 /
1."
b10000000 "
b10000000 .
1/"
0#
#23
b111111110010 !
b111111110010 1
0)"
b0 0
1#
#24
b0 "
b0 .
0/"
b0 /
0."
0#
#25
1#
#26
0#
#27
1#
#28
0#
#29
1#
#30
0#
#31
1#
#32
0#
#33
1#
#34
0#
#35
1#
#36
0#
#37
1#
#38
0#
#39
1#
#40
0#
#41
1#
#42
0#
#43
1#
#44
0#
#45
1#
#46
0#
#47
1#
#48
0#
#49
1#
#50
0#
#51
1#
#52
0#
#53
1#
#54
0#
#55
1#
#56
0#
#57
1#
#58
0#
#59
1#
#60
0#
#61
1#
#62
0#
#63
1#
#64
0#
#65
1#
#66
0#
#67
1#
#68
0#
#69
1#
#70
0#
#71
1#
#72
0#
#73
1#
#74
0#
#75
1#
#76
0#
#77
1#
#78
0#
#79
1#
#80
0#
#81
1#
#82
0#
#83
1#
#84
0#
#85
1#
#86
0#
#87
1#
#88
0#
#89
1#
#90
0#
#91
1#
#92
0#
#93
1#
#94
0#
#95
1#
#96
0#
#97
1#
#98
0#
#99
1#
#100
0#
#101
1#
#102
0#
#103
1#
#104
0#
#105
1#
#106
0#
#107
1#
#108
0#
#109
1#
#110
0#
#111
1#
#112
0#
#113
1#
#114
0#
#115
1#
#116
0#
#117
1#
#118
0#
#119
1#
#120
0#
