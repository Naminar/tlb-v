$date
	Wed May  1 12:10:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module set_tb $end
$var wire 64 ! o_addr [63:0] $end
$var wire 1 " miss $end
$var wire 1 # hit $end
$var reg 1 $ clk $end
$var reg 64 % pa [63:0] $end
$var reg 12 & pcid [11:0] $end
$var reg 1 ' shutdown $end
$var reg 64 ( va [63:0] $end
$scope module TLB $end
$var wire 1 $ clk $end
$var wire 64 ) pa [63:0] $end
$var wire 12 * pcid [11:0] $end
$var wire 1 ' shutdown $end
$var wire 64 + va [63:0] $end
$var wire 8 , way_hit [7:0] $end
$var wire 49 - tag [48:0] $end
$var wire 3 . set [2:0] $end
$var wire 12 / local_addr [11:0] $end
$var reg 1 # hit $end
$var reg 1 " miss $end
$var reg 64 0 prev_addr [63:0] $end
$var reg 12 1 prev_pcid [11:0] $end
$var reg 2 2 state [1:0] $end
$var reg 64 3 ta [63:0] $end
$var reg 8 4 write [7:0] $end
$var integer 32 5 a [31:0] $end
$scope function use_mask $end
$var reg 1 6 mask $end
$var reg 1 7 plru $end
$var reg 1 8 value $end
$upscope $end
$scope begin ways[0] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 9 pa [51:0] $end
$var wire 12 : pcid [11:0] $end
$var wire 3 ; set [2:0] $end
$var wire 2 < state [1:0] $end
$var wire 49 = tag [48:0] $end
$var wire 1 > write $end
$var reg 1 ? hit $end
$var reg 52 @ ta [51:0] $end
$var integer 32 A i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[1] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 B pa [51:0] $end
$var wire 12 C pcid [11:0] $end
$var wire 3 D set [2:0] $end
$var wire 2 E state [1:0] $end
$var wire 49 F tag [48:0] $end
$var wire 1 G write $end
$var reg 1 H hit $end
$var reg 52 I ta [51:0] $end
$var integer 32 J i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[2] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 K pa [51:0] $end
$var wire 12 L pcid [11:0] $end
$var wire 3 M set [2:0] $end
$var wire 2 N state [1:0] $end
$var wire 49 O tag [48:0] $end
$var wire 1 P write $end
$var reg 1 Q hit $end
$var reg 52 R ta [51:0] $end
$var integer 32 S i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[3] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 T pa [51:0] $end
$var wire 12 U pcid [11:0] $end
$var wire 3 V set [2:0] $end
$var wire 2 W state [1:0] $end
$var wire 49 X tag [48:0] $end
$var wire 1 Y write $end
$var reg 1 Z hit $end
$var reg 52 [ ta [51:0] $end
$var integer 32 \ i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[4] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 ] pa [51:0] $end
$var wire 12 ^ pcid [11:0] $end
$var wire 3 _ set [2:0] $end
$var wire 2 ` state [1:0] $end
$var wire 49 a tag [48:0] $end
$var wire 1 b write $end
$var reg 1 c hit $end
$var reg 52 d ta [51:0] $end
$var integer 32 e i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[5] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 f pa [51:0] $end
$var wire 12 g pcid [11:0] $end
$var wire 3 h set [2:0] $end
$var wire 2 i state [1:0] $end
$var wire 49 j tag [48:0] $end
$var wire 1 k write $end
$var reg 1 l hit $end
$var reg 52 m ta [51:0] $end
$var integer 32 n i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[6] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 o pa [51:0] $end
$var wire 12 p pcid [11:0] $end
$var wire 3 q set [2:0] $end
$var wire 2 r state [1:0] $end
$var wire 49 s tag [48:0] $end
$var wire 1 t write $end
$var reg 1 u hit $end
$var reg 52 v ta [51:0] $end
$var integer 32 w i [31:0] $end
$upscope $end
$upscope $end
$scope begin ways[7] $end
$scope module w $end
$var wire 1 $ clk $end
$var wire 52 x pa [51:0] $end
$var wire 12 y pcid [11:0] $end
$var wire 3 z set [2:0] $end
$var wire 2 { state [1:0] $end
$var wire 49 | tag [48:0] $end
$var wire 1 } write $end
$var reg 1 ~ hit $end
$var reg 52 !" ta [51:0] $end
$var integer 32 "" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 ""
bx !"
0~
0}
b1111111111111111111111111111111111111111111111111 |
b0 {
b111 z
b0 y
b0 x
b1000 w
bx v
0u
0t
b1111111111111111111111111111111111111111111111111 s
b0 r
b111 q
b0 p
b0 o
b1000 n
bx m
0l
0k
b1111111111111111111111111111111111111111111111111 j
b0 i
b111 h
b0 g
b0 f
b1000 e
bx d
0c
0b
b1111111111111111111111111111111111111111111111111 a
b0 `
b111 _
b0 ^
b0 ]
b1000 \
bx [
0Z
0Y
b1111111111111111111111111111111111111111111111111 X
b0 W
b111 V
b0 U
b0 T
b1000 S
bx R
0Q
0P
b1111111111111111111111111111111111111111111111111 O
b0 N
b111 M
b0 L
b0 K
b1000 J
bx I
0H
0G
b1111111111111111111111111111111111111111111111111 F
b0 E
b111 D
b0 C
b0 B
b1000 A
bx @
0?
0>
b1111111111111111111111111111111111111111111111111 =
b0 <
b111 ;
b0 :
b0 9
x8
x7
x6
b1000 5
b0 4
bx 3
b0 2
b0 1
b0 0
b111111110001 /
b111 .
b1111111111111111111111111111111111111111111111111 -
b0 ,
b1111111111111111111111111111111111111111111111111111111111110001 +
b0 *
b0 )
b1111111111111111111111111111111111111111111111111111111111110001 (
0'
b0 &
b0 %
0$
x#
x"
bx !
$end
#1
b1111111111111111111111111111111111111111111111111111111111110001 0
b1 2
b1 <
b1 E
b1 N
b1 W
b1 `
b1 i
b1 r
b1 {
0#
0"
1$
#2
0$
#3
b10 2
b10 <
b10 E
b10 N
b10 W
b10 `
b10 i
b10 r
b10 {
0#
bx111111110001 !
bx111111110001 3
1$
#4
0$
#5
b0 2
b0 <
b0 E
b0 N
b0 W
b0 `
b0 i
b0 r
b0 {
b111111110001 !
b111111110001 3
1"
1}
b10000000 4
1$
#6
0$
#7
0}
b0 4
0"
1$
#8
0$
#9
1$
#10
b0 /
b0 .
b0 ;
b0 D
b0 M
b0 V
b0 _
b0 h
b0 q
b0 z
b0 -
b0 =
b0 F
b0 O
b0 X
b0 a
b0 j
b0 s
b0 |
0$
b0 (
b0 +
#11
b0 @
1?
b0 I
1H
b0 R
1Q
b0 [
1Z
b0 d
1c
b0 m
1l
b0 v
1u
b0 !"
b11111111 ,
1~
b0 0
b1 2
b1 <
b1 E
b1 N
b1 W
b1 `
b1 i
b1 r
b1 {
1$
#12
0$
#13
0?
0H
0Q
0Z
0c
0l
0u
b0 ,
0~
b0 2
b0 <
b0 E
b0 N
b0 W
b0 `
b0 i
b0 r
b0 {
1#
b0 !
b0 3
17
16
18
1$
#14
0$
#15
0#
1$
#16
0$
#17
1$
#18
0$
#19
1$
#20
b111111110001 /
b111 .
b111 ;
b111 D
b111 M
b111 V
b111 _
b111 h
b111 q
b111 z
b1111111111111111111111111111111111111111111111111 -
b1111111111111111111111111111111111111111111111111 =
b1111111111111111111111111111111111111111111111111 F
b1111111111111111111111111111111111111111111111111 O
b1111111111111111111111111111111111111111111111111 X
b1111111111111111111111111111111111111111111111111 a
b1111111111111111111111111111111111111111111111111 j
b1111111111111111111111111111111111111111111111111 s
b1111111111111111111111111111111111111111111111111 |
0$
b1111111111111111111111111111111111111111111111111111111111110001 (
b1111111111111111111111111111111111111111111111111111111111110001 +
b1 &
b1 *
b1 :
b1 C
b1 L
b1 U
b1 ^
b1 g
b1 p
b1 y
#21
b1 1
b1111111111111111111111111111111111111111111111111111111111110001 0
b1 2
b1 <
b1 E
b1 N
b1 W
b1 `
b1 i
b1 r
b1 {
1$
#22
0$
#23
b10 2
b10 <
b10 E
b10 N
b10 W
b10 `
b10 i
b10 r
b10 {
0#
b111111110001 !
b111111110001 3
1$
#24
0$
#25
b0 2
b0 <
b0 E
b0 N
b0 W
b0 `
b0 i
b0 r
b0 {
1"
1Y
b1000 4
1$
#26
0$
#27
0Y
b0 4
0"
1$
#28
0$
#29
1$
#30
0$
b0 &
b0 *
b0 :
b0 C
b0 L
b0 U
b0 ^
b0 g
b0 p
b0 y
#31
b10000000 ,
1~
b0 1
b1 2
b1 <
b1 E
b1 N
b1 W
b1 `
b1 i
b1 r
b1 {
1$
#32
0$
#33
b0 ,
0~
b0 2
b0 <
b0 E
b0 N
b0 W
b0 `
b0 i
b0 r
b0 {
1#
17
1$
#34
0$
#35
0#
1$
#36
0$
#37
1$
#38
0$
#39
1$
#40
0$
b1 &
b1 *
b1 :
b1 C
b1 L
b1 U
b1 ^
b1 g
b1 p
b1 y
#41
b1000 ,
1Z
b1 1
b1 2
b1 <
b1 E
b1 N
b1 W
b1 `
b1 i
b1 r
b1 {
1$
#42
0$
#43
b10 2
b10 <
b10 E
b10 N
b10 W
b10 `
b10 i
b10 r
b10 {
0#
07
08
1$
#44
0$
#45
b0 ,
0Z
b0 2
b0 <
b0 E
b0 N
b0 W
b0 `
b0 i
b0 r
b0 {
1"
1}
b10000000 4
1$
#46
0$
#47
0}
b0 4
0"
1$
#48
0$
#49
1$
#50
0$
#51
1$
#52
0$
#53
1$
#54
0$
#55
1$
#56
0$
#57
1$
#58
0$
#59
1$
#60
0$
#61
1$
#62
0$
#63
1$
#64
0$
#65
1$
#66
0$
#67
1$
#68
0$
#69
1$
#70
0$
#71
1$
#72
0$
#73
1$
#74
0$
#75
1$
#76
0$
#77
1$
#78
0$
#79
1$
#80
0$
#81
1$
#82
0$
#83
1$
#84
0$
#85
1$
#86
0$
#87
1$
#88
0$
#89
1$
#90
0$
#91
1$
#92
0$
#93
1$
#94
0$
#95
1$
#96
0$
#97
1$
#98
0$
#99
1$
#100
0$
#101
1$
#102
0$
#103
1$
#104
0$
#105
1$
#106
0$
#107
1$
#108
0$
#109
1$
#110
0$
#111
1$
#112
0$
#113
1$
#114
0$
#115
1$
#116
0$
#117
1$
#118
0$
#119
1$
#120
0$
#121
1$
#122
0$
#123
1$
#124
0$
#125
1$
#126
0$
#127
1$
#128
0$
#129
1$
#130
0$
#131
1$
#132
0$
#133
1$
#134
0$
#135
1$
#136
0$
#137
1$
#138
0$
#139
1$
#140
0$
